# NetMarketiniz AI-B2B E-Ticaret Platformu

## Proje Bilgileri
- **Platform:** Laravel 12 B2B/B2C E-Ticaret
- **Mimari:** Repository Pattern + Service Layer
- **Database:** SQLite (Dev), MySQL (Prod)
- **Frontend:** Tailwind CSS + Alpine.js

## Platform EntegrasyonlarÄ±
- Trendyol API
- Hepsiburada API
- N11 API
- Platform senkronizasyonu (Ã¼rÃ¼n, stok, sipariÅŸ)

## Mevcut ModÃ¼ller
1. **Admin Sistemi:**
   - Super Admin (tam yetki)
   - Store Admin (maÄŸaza yÃ¶netimi)
   - Dealer Admin (bayi yÃ¶netimi)

2. **Ana Ã–zellikler:**
   - ÃœrÃ¼n yÃ¶netimi
   - MaÄŸaza yÃ¶netimi (Ana/Alt yapÄ±sÄ±)
   - SipariÅŸ yÃ¶netimi
   - Bayi yÃ¶netimi
   - Platform entegrasyonlarÄ±

3. **AI Ã–zellikleri:**
   - Claude AI entegrasyonu
   - Otomatik Ã¼rÃ¼n aÃ§Ä±klamalarÄ±
   - SEO meta generation
   - MÃ¼ÅŸteri destek otomasyonu
   - Hata analiz botu

4. **Services:**
   - PlatformEntegrasyonService
   - ClaudeService
   - HataAnalizBotService

## Kod StandartlarÄ±
- PSR-12 coding standards
- Repository pattern iÃ§in interface kullan
- Service layer'da business logic
- Controller'lar sadece HTTP handling
- Model'lerde scope ve relationship'ler
- Validation Request class'larÄ±nda

## VeritabanÄ± YapÄ±sÄ±
- kullanicilar (rol: super_admin, store_admin, dealer_admin, bayi, musteri)
- magazalar (ana_magaza: boolean)
- bayiler
- urunler
- siparisler
- senkron_loglar

## Naming Conventions
- Controller: PascalCase (UrunController)
- Service: PascalCase + Service (UrunService)
- Repository: PascalCase + Repository (UrunRepository)
- Interface: PascalCase + RepositoryInterface
- Model: PascalCase tekil (Urun, Magaza)
- Migration: snake_case (create_urunler_table)

## GeliÅŸtirme NotlarÄ±

### YapÄ±lanlar (2025-10-12):
- âœ… Repository Pattern uygulandÄ± (UrunRepository)
- âœ… Service Layer oluÅŸturuldu (UrunService)
- âœ… ClaudeService.php entegre edildi (AI Ã¶zellikleri)
- âœ… Cache stratejisi uygulandÄ±

### Devam Edenler:
- ğŸ”„ MagazaRepository oluÅŸturulacak
- ğŸ”„ BayiRepository oluÅŸturulacak
- ğŸ”„ SiparisRepository oluÅŸturulacak

### Teknik Detaylar:
- Repository pattern: Interface + Eloquent implementasyon
- Service layer: Business logic burada
- Cache: 1 saat (3600 saniye)
- Transaction: DB iÅŸlemlerinde kullanÄ±lÄ±yor

## Ã–nemli Kurallar
- Asla production .env'e mÃ¼dahale etme
- Migration'larda geri alma (down) method'u her zaman doldur
- API rate limiting'e dikkat et (platform entegrasyonlarÄ±nda)
- ÃœrÃ¼n senkronizasyonunda transaction kullan
- Log her platform isteÄŸini (SenkronLog)

